/*
PDFGen API

The PDFGen API for HTML to PDF generation.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListTemplatesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListTemplatesResponse{}

// ListTemplatesResponse struct for ListTemplatesResponse
type ListTemplatesResponse struct {
	Templates []TemplateResponse `json:"templates"`
}

// NewListTemplatesResponse instantiates a new ListTemplatesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListTemplatesResponse(templates []TemplateResponse) *ListTemplatesResponse {
	this := ListTemplatesResponse{}
	this.Templates = templates
	return &this
}

// NewListTemplatesResponseWithDefaults instantiates a new ListTemplatesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListTemplatesResponseWithDefaults() *ListTemplatesResponse {
	this := ListTemplatesResponse{}
	return &this
}

// GetTemplates returns the Templates field value
func (o *ListTemplatesResponse) GetTemplates() []TemplateResponse {
	if o == nil {
		var ret []TemplateResponse
		return ret
	}

	return o.Templates
}

// GetTemplatesOk returns a tuple with the Templates field value
// and a boolean to check if the value has been set.
func (o *ListTemplatesResponse) GetTemplatesOk() ([]TemplateResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Templates, true
}

// SetTemplates sets field value
func (o *ListTemplatesResponse) SetTemplates(v []TemplateResponse) {
	o.Templates = v
}

func (o ListTemplatesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListTemplatesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["templates"] = o.Templates
	return toSerialize, nil
}

type NullableListTemplatesResponse struct {
	value *ListTemplatesResponse
	isSet bool
}

func (v NullableListTemplatesResponse) Get() *ListTemplatesResponse {
	return v.value
}

func (v *NullableListTemplatesResponse) Set(val *ListTemplatesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListTemplatesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListTemplatesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTemplatesResponse(val *ListTemplatesResponse) *NullableListTemplatesResponse {
	return &NullableListTemplatesResponse{value: val, isSet: true}
}

func (v NullableListTemplatesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTemplatesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


