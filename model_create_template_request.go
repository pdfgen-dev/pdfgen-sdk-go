/*
PDFGen API

The PDFGen API for HTML to PDF generation.

API version: 1.0
Contact: support@pdfgen.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pdfgen

import (
	"encoding/json"
)

// checks if the CreateTemplateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTemplateRequest{}

// CreateTemplateRequest struct for CreateTemplateRequest
type CreateTemplateRequest struct {
	// Alias of template
	Alias string `json:"alias"`
	// HTML used for generation
	Html string `json:"html"`
	// Name of template
	Name string `json:"name"`
}

// NewCreateTemplateRequest instantiates a new CreateTemplateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTemplateRequest(alias string, html string, name string) *CreateTemplateRequest {
	this := CreateTemplateRequest{}
	this.Alias = alias
	this.Html = html
	this.Name = name
	return &this
}

// NewCreateTemplateRequestWithDefaults instantiates a new CreateTemplateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTemplateRequestWithDefaults() *CreateTemplateRequest {
	this := CreateTemplateRequest{}
	return &this
}

// GetAlias returns the Alias field value
func (o *CreateTemplateRequest) GetAlias() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Alias
}

// GetAliasOk returns a tuple with the Alias field value
// and a boolean to check if the value has been set.
func (o *CreateTemplateRequest) GetAliasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Alias, true
}

// SetAlias sets field value
func (o *CreateTemplateRequest) SetAlias(v string) {
	o.Alias = v
}

// GetHtml returns the Html field value
func (o *CreateTemplateRequest) GetHtml() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Html
}

// GetHtmlOk returns a tuple with the Html field value
// and a boolean to check if the value has been set.
func (o *CreateTemplateRequest) GetHtmlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Html, true
}

// SetHtml sets field value
func (o *CreateTemplateRequest) SetHtml(v string) {
	o.Html = v
}

// GetName returns the Name field value
func (o *CreateTemplateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateTemplateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateTemplateRequest) SetName(v string) {
	o.Name = v
}

func (o CreateTemplateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTemplateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alias"] = o.Alias
	toSerialize["html"] = o.Html
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableCreateTemplateRequest struct {
	value *CreateTemplateRequest
	isSet bool
}

func (v NullableCreateTemplateRequest) Get() *CreateTemplateRequest {
	return v.value
}

func (v *NullableCreateTemplateRequest) Set(val *CreateTemplateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTemplateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTemplateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTemplateRequest(val *CreateTemplateRequest) *NullableCreateTemplateRequest {
	return &NullableCreateTemplateRequest{value: val, isSet: true}
}

func (v NullableCreateTemplateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTemplateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


